package it.unipr.ds.A1;

import java.io.BufferedInputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.Random;

public class NodeThread implements Runnable {

//	private Node node;  // reference to the Master node
//	private int nodeID; // ID of the Node to which this thread sends a Message
	
//	public NodeThread(Node node, int nodeID) {
//		this.node = node;
//		this.nodeID = nodeID;
//	}

	@Override
	public void run() {
//		String addr = node.getNodes().get(nodeID).split(":")[0];
//		int port = Integer.parseInt(node.getNodes().get(nodeID).split(":")[1]);
//		
//		try (Socket nodeSocket = new Socket(addr, port)) {
//
//			ObjectOutputStream nodeOs = new ObjectOutputStream(nodeSocket.getOutputStream());
//			ObjectInputStream nodeIs = null;
//
//			// We send a Message object
//			// TODO implement a "better" message id generation (incremental)
//			Random rnd = new Random();
//			int MAX_ID = 100;
//			int msgID = rnd.nextInt(MAX_ID);
//			
//			Message msg = new Message(addr, msgID);
//			System.out.println("Node sends: " + msg + " to node " + nodeID);
//
//			nodeOs.writeObject(msg);
//			nodeOs.flush();
//
//			nodeIs = new ObjectInputStream(new BufferedInputStream(nodeSocket.getInputStream()));
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
	}

}
